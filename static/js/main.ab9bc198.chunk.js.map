{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","props","movies","map","movie","index","className","src","Poster","alt","Title","Year","class","onClick","handleClick","status","App","useState","setMovies","search","setSearch","nominees","setNominees","saveLocalStorage","localStorage","setItem","JSON","stringify","useEffect","api","fetch","then","res","json","data","Search","console","log","catch","err","searchMovie","length","alert","savedNominated","parse","getItem","placeholder","value","onChange","e","target","includes","updatedNomineeList","filter","nominee","imdbID","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA0BeA,MAxBf,SAAeC,GAGb,OACE,mCACGA,EAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAChB,sBAAiBC,UAAU,6BAA3B,UACE,qBAAKC,IAAKH,EAAMI,OAAQC,IAAI,iBAC5B,sBAAKH,UAAU,cAAf,UACE,6BAAKF,EAAMM,QACX,6BAAKN,EAAMO,OACX,wBACEC,MAAM,yBACNC,QAAS,kBAAMZ,EAAMa,YAAYV,IAFnC,SAIGH,EAAMc,OAAS,MAAQ,gBATpBV,SCmGHW,MAlGf,WACE,MAA4BC,mBAAS,IAArC,mBAAOf,EAAP,KAAegB,EAAf,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KA2CA,SAASC,EAAiBnB,GACxBoB,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUvB,IAwB1D,OAhDAwB,qBAAU,YAlBV,SAAqBT,GACnB,IAAMU,EAAG,oDAAgDV,GAEzDW,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACDA,EAAKC,SACPjB,EAAUgB,EAAKC,QACfC,QAAQC,IAAInC,OAGfoC,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,MAQ9BC,CAAYrB,KACX,CAACA,IAEJS,qBAAU,WACJP,EAASoB,OAAS,GACpBC,MAAM,iCAEP,CAACrB,IAGJO,qBAAU,WACR,IAAMe,EAAiBjB,KAAKkB,MAAMpB,aAAaqB,QAAQ,qBAEnDF,GACFrB,EAAYqB,KAEb,IAgCD,sBAAKrC,UAAU,wBAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,mFAEA,qBAAKA,UAAU,eAAf,SACE,uBACEwC,YAAY,qBACZC,MAAO5B,EACP6B,SAtCgB,SAACC,GACzB,OAAO7B,EAAU6B,EAAEC,OAAOH,eAyCxB,qBAAKzC,UAAU,MAAf,SACE,cAAC,EAAD,CAAOJ,OAAQA,EAAQa,QAAQ,EAAMD,YAnC3C,SAAoBV,GAClBgC,QAAQC,IAAIhB,GAERA,EAAS8B,SAAS/C,GACpBsC,MAAM,2CAGNpB,EAAY,GAAD,mBAAKD,GAAL,CAAejB,KAC1BmB,EAAiB,GAAD,mBAAKF,GAAL,CAAejB,WA6B/B,qBAAKE,UAAU,0CAAf,SACE,6DAGF,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAOJ,OAAQmB,EAAUN,QAAQ,EAAOD,YA9B9C,SAAuBV,GACrB,IAAMgD,EAAqB/B,EAASgC,QAClC,SAACC,GAAD,OAAaA,EAAQC,SAAWnD,EAAMmD,UAGxCjC,EAAY8B,GACZ7B,EAAiB6B,YCjENI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ab9bc198.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Movie(props) {\r\n  //const Btn = props.nominateComponent;\r\n  //const DeleteBtn = props.nominate;\r\n  return (\r\n    <>\r\n      {props.movies.map((movie, index) => (\r\n        <div key={index} className=\" justify-content-start m-3\">\r\n          <img src={movie.Poster} alt=\"movie poster\"></img>\r\n          <div className=\"text-center\">\r\n            <h5>{movie.Title}</h5>\r\n            <h5>{movie.Year}</h5>\r\n            <button\r\n              class=\"btn btn-primary btn-lg\"\r\n              onClick={() => props.handleClick(movie)}\r\n            >\r\n              {props.status ? \"Add\" : \"Delete\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Movie from \"./components/Movie\";\n//import Add from \"./components/AddNominee\";\n//import Delete from \"./components/DeleteNominee\";\n//import NominatedMovie from \"./components/NominatedMovie\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [nominees, setNominees] = useState([]);\n\n  function searchMovie(search) {\n    const api = `http://www.omdbapi.com/?apikey=8de7c732&s=${search}`;\n\n    fetch(api)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.Search) {\n          setMovies(data.Search);\n          console.log(movies);\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // searches for movies\n  // function queryOMDB() {\n  //   searchMovie(search);\n  // }\n  useEffect(() => {\n    searchMovie(search);\n  }, [search]);\n\n  useEffect(() => {\n    if (nominees.length > 4) {\n      alert(\"You have nominated 5 films!\");\n    }\n  }, [nominees]);\n\n  //renders local storage upon loading\n  useEffect(() => {\n    const savedNominated = JSON.parse(localStorage.getItem(\"nominated-movies\"));\n\n    if (savedNominated) {\n      setNominees(savedNominated);\n    }\n  }, []);\n\n  const handleInputChange = (e) => {\n    return setSearch(e.target.value);\n  };\n\n  function saveLocalStorage(movie) {\n    localStorage.setItem(\"nominated-movies\", JSON.stringify(movie));\n  }\n\n  function addNominee(movie) {\n    console.log(nominees);\n\n    if (nominees.includes(movie)) {\n      alert(\"This movie has already been nominated!\");\n      return;\n    } else {\n      setNominees([...nominees, movie]);\n      saveLocalStorage([...nominees, movie]);\n    }\n  }\n\n  function deleteNominee(movie) {\n    const updatedNomineeList = nominees.filter(\n      (nominee) => nominee.imdbID !== movie.imdbID\n    );\n\n    setNominees(updatedNomineeList);\n    saveLocalStorage(updatedNomineeList);\n  }\n\n  return (\n    <div className=\"container-fluid movie\">\n      <div className=\"row d-flex align-items-center mt-4 mb-4\">\n        <h3>Nominate your favorite movie for a Shoppie Award!</h3>\n\n        <div className=\"col col-sm-6\">\n          <input\n            placeholder=\"Search for a movie\"\n            value={search}\n            onChange={handleInputChange}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <Movie movies={movies} status={true} handleClick={addNominee} />\n      </div>\n      <div className=\"row d-flex align-items-center mt-4 mb-4\">\n        <h3>Movies you have nominated</h3>\n      </div>\n\n      <div className=\"row\">\n        <Movie movies={nominees} status={false} handleClick={deleteNominee} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}